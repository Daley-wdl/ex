<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.exhibition.dao.OrderDao">

    <insert id="insert" parameterType="Order" useGeneratedKeys="true" keyProperty="orderId">
        INSERT INTO `order`
        (user_id, order_address_id, pay_type, shipment_type, shipment_amount, order_status
              , create_time, order_amount, pay_amount, buy_number, payment)
        VALUES (#{userId},#{orderAddressId},#{payType},#{shipmentType},#{shipmentAmount},#{orderStatus},#{createTime}
        ,#{orderAmount},#{payAmount},#{buyNumber},#{payment})
    </insert>

    <delete id="delete" parameterType="int">
        DELETE FROM `order`
        WHERE order_id=#{value}
    </delete>

    <select id="getOrder" parameterType="int" resultType="Order">
        select * from `order`
        WHERE order_id=#{value}
    </select>

    <select id="getOrderListByUserId" resultType="Order">
        select * from `order`
        WHERE user_id=#{userId}
        ORDER BY create_time DESC
        limit #{start},#{size}
    </select>

    <select id="getCountByUserId" resultType="int">
        select count(*) from `order` o
        WHERE user_id=#{userId} AND order_status=#{orderStatus}
    </select>

    <update id="updateOrderStatus">
        UPDATE `order` SET order_status=#{orderStatus},update_time=CURRENT_TIMESTAMP, payment=#{payment}
        WHERE order_id=#{orderId}
    </update>

    <sql id="baseColumns">o.order_id,o.user_id, o.order_address_id, o.pay_type,
        o.shipment_type, o.shipment_amount, o.order_status
        , o.create_time,o.update_time, o.order_amount, o.payment,o.is_delivered</sql>

    <select id="getOrdersForExhibitor" resultType="com.exhibition.vo.OrderForExhibitorVo">
        select
        <include refid="baseColumns"></include>
        from `order` o ,exhibits e,order_item oi
        WHERE oi.exhibits_id=e.id AND e.exhibitor_id=#{exhibitorId} AND oi.order_id=o.order_id
        GROUP BY o.order_id
        ORDER BY o.create_time DESC
        limit #{start},#{size}
    </select>

    <select id="getCanceledOrdersForExhibitor" resultType="com.exhibition.vo.OrderForExhibitorVo">
        select
        <include refid="baseColumns"></include>
        from `order` o ,exhibits e,order_canceled_item oi
        WHERE o.order_id=oi.order_id AND oi.exhibits_id=e.id AND e.exhibitor_id=#{exhibitorId}
        GROUP BY o.order_id
        ORDER BY o.create_time DESC
        limit #{start},#{size}
    </select>

    <select id="getCountForExhibitor" resultType="int">
        select count(DISTINCT o.order_id) from `order` o,exhibits e ,order_item oi
        WHERE o.order_id=oi.order_id AND oi.exhibits_id=e.id AND e.exhibitor_id=#{exhibitorId}
    </select>

    <select id="getCanceledCountForExhibitor" resultType="int">
        select count(DISTINCT o.order_id) from `order` o,exhibits e ,order_canceled_item oi
        WHERE o.order_id=oi.order_id AND oi.exhibits_id=e.id AND e.exhibitor_id=#{exhibitorId}
    </select>

    <update id="updatePayAmount">
        UPDATE `order`
        SET pay_amount=#{payAmount}, update_time=CURRENT_TIMESTAMP
        WHERE order_id=#{orderId}
    </update>

    <select id="getOrderIdForUser" resultType="int">
        select order_id from `order`
        WHERE user_id=#{userId}
        ORDER BY create_time DESC
        limit #{start},#{size}
    </select>

    <update id="updateIsDelivered">
        UPDATE `order`
        SET is_delivered=#{isDelivered},update_time=CURRENT_TIMESTAMP
        WHERE order_id=#{orderId}
    </update>

    <select id="getCountByOrderAddressId" resultType="int" parameterType="int">
        select count(*) from `order` o
        where o.order_address_id=#{value} AND is_delivered='0'
    </select>


</mapper>